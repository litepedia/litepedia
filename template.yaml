AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  litepedia infrastructure as code (IaC). See https://github.com/litepedia/litepedia#readme for more details.
Globals:
  Function:
    Timeout: 30
    MemorySize: 2048
    Tracing: Active
Parameters:
  domainName:
    Type: String
    Description: The domain name (eg. summariser.com, test.summariser.com)
  hostedZoneName:
    Type: String
    Description: Your previously created Route53 hosted zone name (eg. summariser.com)
  certificateArn:
    Type: String
    Description: Your previously created ACM certificate ARN
Resources:
  Handler:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub litepedia-${AWS::StackName}-handler
      CodeUri: handler/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      FunctionUrlConfig:
        AuthType: NONE
      Environment:
        Variables:
          SEARCH_CACHE_TABLE: !Ref DynamoDBSearchCache
          OPENAI_API_KEY_PARAM_NAME: !Ref OpenApiKey
          BASE_URL: !Sub "https://${domainName}/wiki/"
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBSearchCache
        - DynamoDBWritePolicy:
            TableName: !Ref DynamoDBSearchCache
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !Ref OpenApiKey
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts
  LambdaFunctionLogGroup:
    Type: "AWS::Logs::LogGroup"
    DependsOn: "Handler"
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/${Handler}"
  DynamoDBSearchCache:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub litepedia-${AWS::StackName}-search-cache
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: term
          AttributeType: S
      KeySchema:
        - AttributeName: term
          KeyType: HASH
  OpenApiKey:
    Type: AWS::SSM::Parameter
    Properties:
      # After deployment, this needed updating to a secure string (can't do this in CloudFormation)
      # https://blog.rowanudell.com/managing-secure-string-parameters-in-cloudformation/
      Name: !Sub /${AWS::StackName}/litepedia/openai_api_key
      Description: The API key for communicating with OpenAI
      Type: String
      Value: temp
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - Handler
    Properties:
      DistributionConfig:
        Enabled: true
        PriceClass: PriceClass_100
        HttpVersion: http2
        Comment: !Sub "litepedia API distribution for ${domainName}. Used to forward requests to Lambda function URL"
        Origins:
          - Id: ApiGateway
            DomainName:
              !Select [2, !Split ["/", !GetAtt HandlerUrl.FunctionUrl]]
            OriginPath: ""
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols: [TLSv1, TLSv1.1, TLSv1.2]
        DefaultCacheBehavior:
          TargetOriginId: ApiGateway
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          DefaultTTL: 0
          AllowedMethods:
            - HEAD
            - DELETE
            - POST
            - GET
            - OPTIONS
            - PUT
            - PATCH
          CachedMethods:
            - HEAD
            - OPTIONS
            - GET
          ForwardedValues:
            QueryString: false
            Headers:
              - Accept
              - x-api-key
              - Authorization
            Cookies:
              Forward: none
        Aliases:
          - !Ref domainName
          - !Sub "www.${domainName}"
        ViewerCertificate:
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
          AcmCertificateArn: !Ref certificateArn
  RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    DependsOn:
      - CloudFrontDistribution
    Properties:
      # Need to append extra ".". See `aws route53 list-hosted-zones-by-name`
      HostedZoneName: !Sub "${hostedZoneName}."
      RecordSets:
        - Name: !Ref domainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Cloudfront default hosted zone ID
            DNSName: { "Fn::GetAtt": [CloudFrontDistribution, DomainName] }
        - Name: !Sub "www.${domainName}"
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Cloudfront default hosted zone ID
            DNSName: { "Fn::GetAtt": [CloudFrontDistribution, DomainName] }

Outputs:
  BaseUrl:
    Description: "Base URL of your litepedia app"
    Value: !Sub "https://${domainName}/"
  OpenAPIKeyParam:
    Description: "OpenAI API Key Parameter"
    Value:
      Ref: OpenApiKey
